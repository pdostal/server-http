- name: nginx
  hosts: all
  sudo: true
  handlers:
  - name: restart nginx
    service: name=nginx state=restarted
  - name: reload nginx
    service: name=nginx state=reloaded

  tasks:
  - set_fact:
      nginx_conf: /usr/local/etc/nginx/
    when: ansible_distribution == 'FreeBSD'
  - set_fact:
      nginx_conf: /etc/nginx/
    when: ansible_system == 'Linux'

  - name: install nginx (Debian)
    when: ansible_distribution == 'Debian'
    apt: pkg=nginx-full state=present force=yes
    notify: restart nginx
  - name: install nginx (FreeBSD)
    when: ansible_distribution == 'FreeBSD'
    pkgng: name=nginx state=present
    notify: restart nginx
  - name: enable nginx service
    when: ansible_distribution == 'FreeBSD'
    lineinfile: dest=/etc/rc.conf regexp=^nginx_enable= line=nginx_enable=YES
    notify: restart nginx
  - name: install EPEL
    when: ansible_distribution == 'CentOS'
    yum: name=epel-release state=latest
  - name: install nginx (CentOS)
    when: ansible_distribution == 'CentOS'
    yum: name=nginx state=latest
    notify: restart nginx

  - name: Create conf.d directory
    file: path={{ nginx_conf }}conf.d state=directory
  - name: Create sites-enabled directory
    file: path={{ nginx_conf }}sites-enabled state=directory

  - name: Create log directory
    file: path=/var/log/nginx state=directory
  - name: Remove olg logs
    file: path=/var/log/nginx*.log state=absent

  - name: Paste nginx config
    template: src=templates/nginx.conf dest={{ nginx_conf }}nginx.conf
    notify: reload nginx
  - name: Remove default vhost
    file: path={{ nginx_conf }}sites-enabled/default state=absent
    notify: reload nginx
